defmodule Aiex.Tui.LibvaxisNifMinimal do
  @moduledoc """
  Minimal Terminal UI NIF implementation for testing Elixir/Zig integration.
  
  This provides basic terminal functionality without external dependencies,
  allowing us to test the infrastructure before adding full Libvaxis support.
  """
  
  use Zig, 
    otp_app: :aiex,
    nifs: [
      zig_test: []
    ]

  ~Z"""
  const beam = @import("beam");
  
  /// Test basic Zig integration
  pub fn zig_test() beam.term {
      return beam.make(.{.ok, .hello_from_zig}, .{});
  }
  """
  
  # Elixir API functions
  
  @doc """
  Test basic Zig integration.
  """
  @spec test_integration() :: {:ok, :hello_from_zig}
  def test_integration do
    zig_test()
  end
  
  @doc """
  Initialize the minimal TUI (placeholder).
  """
  @spec init() :: {:ok, :ok}
  def init do
    {:ok, :ok}
  end
  
  @doc """
  Start the event loop (placeholder).
  """
  @spec start_event_loop(:ok) :: :ok
  def start_event_loop(_resource), do: :ok
  
  @doc """
  Render text at a specific position (placeholder).
  """
  @spec render_text(:ok, integer(), integer(), String.t()) :: :ok
  def render_text(_resource, _x, _y, _text), do: :ok
  
  @doc """
  Clear the screen (placeholder).
  """
  @spec clear_screen(:ok) :: :ok
  def clear_screen(_resource), do: :ok
  
  @doc """
  Get terminal dimensions (placeholder).
  """
  @spec terminal_size(:ok) :: {:ok, {integer(), integer()}}
  def terminal_size(_resource), do: {:ok, {80, 24}}
  
  # NIF stub is automatically generated by Zigler
end